{"ast":null,"code":"var _jsxFileName = \"C:\\\\school\\\\serverside\\\\assignments\\\\large_assignment1\\\\src\\\\pages\\\\AddMovie.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddMovie(props) {\n  _s();\n  let newMovie = {\n    \"id\": \"\",\n    \"title\": \"\",\n    \"date\": \"\",\n    \"actors\": \"\",\n    \"image\": \"\",\n    \"rating\": \"\"\n  };\n  const [addMovie, setAddMovie] = useState(newMovie);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const handleSubmit = event => {\n    event.preventDefault();\n    setAddMovie(newMovie);\n    props.movies.push(addMovie);\n  };\n  function getStarSymbols(rating) {\n    let starString = \"\";\n    let ratingInt = parseInt(rating);\n    for (let i = 0; i < ratingInt; i++) {\n      starString += \"⭐\";\n    }\n    return starString;\n  }\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     <h2>Add A Movie Rating</h2>\n    //     <form onSubmit={handleSubmit}>\n    //         <label>Title</label>\n    //         <input type=\"text\" id=\"title\" onChange={(event) => newMovie.title = event.target.value} />\n    //\n    //         <label>Date</label>\n    //         <input type=\"date\" id=\"date\"  onChange={(event) => newMovie.date = event.target.value} />\n    //\n    //         <label>Actors</label>\n    //         <input type=\"text\" id=\"actors\" onChange={(event) => newMovie.actors = event.target.value} />\n    //\n    //         <label>Image</label>\n    //         <input type=\"url\" id=\"image\" onChange={(event) => newMovie.image = event.target.value} />\n    //\n    //         <label>Rating</label>\n    //         <input type=\"number\" id=\"rating\" onChange={(event) => newMovie.rating = getStarSymbols(event.target.value)} />\n    //\n    //         <button type=\"submit\">Submit</button>\n    //     </form>\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicText\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Title\",\n            onChange: event => newMovie.title = event.target.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicCheckbox\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Check me out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(AddMovie, \"vrJYs1V2WNAkJ7TB5uV54eKheDc=\");\n_c = AddMovie;\nexport default AddMovie;\n\n// <button onClick={() => {\n//     props.movies.push(testMovie);\n// }\n// }>ADD REVIEW</button>\nvar _c;\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","AddMovie","props","newMovie","addMovie","setAddMovie","isSubmitted","setIsSubmitted","handleSubmit","event","preventDefault","movies","push","getStarSymbols","rating","starString","ratingInt","parseInt","i","title","target","value"],"sources":["C:/school/serverside/assignments/large_assignment1/src/pages/AddMovie.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction AddMovie(props){\r\n\r\n    let newMovie = {\r\n        \"id\": \"\",\r\n        \"title\": \"\",\r\n        \"date\": \"\",\r\n        \"actors\": \"\",\r\n        \"image\": \"\",\r\n        \"rating\": \"\"\r\n    }\r\n\r\n    const [addMovie, setAddMovie] = useState(newMovie);\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setAddMovie(newMovie);\r\n        props.movies.push(addMovie);\r\n    };\r\n\r\n    function getStarSymbols(rating){\r\n        let starString = \"\";\r\n        let ratingInt = parseInt(rating);\r\n        for(let i = 0; i < ratingInt; i++){\r\n            starString += \"⭐\";\r\n        }\r\n        return starString;\r\n    }\r\n\r\n\r\n    return(\r\n        // <div>\r\n        //     <h2>Add A Movie Rating</h2>\r\n        //     <form onSubmit={handleSubmit}>\r\n        //         <label>Title</label>\r\n        //         <input type=\"text\" id=\"title\" onChange={(event) => newMovie.title = event.target.value} />\r\n        //\r\n        //         <label>Date</label>\r\n        //         <input type=\"date\" id=\"date\"  onChange={(event) => newMovie.date = event.target.value} />\r\n        //\r\n        //         <label>Actors</label>\r\n        //         <input type=\"text\" id=\"actors\" onChange={(event) => newMovie.actors = event.target.value} />\r\n        //\r\n        //         <label>Image</label>\r\n        //         <input type=\"url\" id=\"image\" onChange={(event) => newMovie.image = event.target.value} />\r\n        //\r\n        //         <label>Rating</label>\r\n        //         <input type=\"number\" id=\"rating\" onChange={(event) => newMovie.rating = getStarSymbols(event.target.value)} />\r\n        //\r\n        //         <button type=\"submit\">Submit</button>\r\n        //     </form>\r\n\r\n        <div>\r\n            <Form>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Title\" onChange={(event) => newMovie.title = event.target.value} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AddMovie;\r\n\r\n\r\n// <button onClick={() => {\r\n//     props.movies.push(testMovie);\r\n// }\r\n// }>ADD REVIEW</button>"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAAC;AAE5C,SAASC,QAAQ,CAACC,KAAK,EAAC;EAAA;EAEpB,IAAIC,QAAQ,GAAG;IACX,IAAI,EAAE,EAAE;IACR,OAAO,EAAE,EAAE;IACX,MAAM,EAAE,EAAE;IACV,QAAQ,EAAE,EAAE;IACZ,OAAO,EAAE,EAAE;IACX,QAAQ,EAAE;EACd,CAAC;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAACM,QAAQ,CAAC;EAClD,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,EAAE;IACtBL,WAAW,CAACF,QAAQ,CAAC;IACrBD,KAAK,CAACS,MAAM,CAACC,IAAI,CAACR,QAAQ,CAAC;EAC/B,CAAC;EAED,SAASS,cAAc,CAACC,MAAM,EAAC;IAC3B,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAIC,SAAS,GAAGC,QAAQ,CAACH,MAAM,CAAC;IAChC,KAAI,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,EAAEE,CAAC,EAAE,EAAC;MAC9BH,UAAU,IAAI,GAAG;IACrB;IACA,OAAOA,UAAU;EACrB;EAGA;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;MAAA,uBACI,QAAC,IAAI;QAAA,wBACD,QAAC,IAAI,CAAC,KAAK;UAAC,SAAS,EAAC,MAAM;UAAC,SAAS,EAAC,eAAe;UAAA,wBAClD,QAAC,IAAI,CAAC,KAAK;YAAA,UAAC;UAAK;YAAA;YAAA;YAAA;UAAA,QAAa,eAC9B,QAAC,IAAI,CAAC,OAAO;YAAC,IAAI,EAAC,MAAM;YAAC,WAAW,EAAC,aAAa;YAAC,QAAQ,EAAGN,KAAK,IAAKN,QAAQ,CAACgB,KAAK,GAAGV,KAAK,CAACW,MAAM,CAACC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QACvG,eAEb,QAAC,IAAI,CAAC,KAAK;UAAC,SAAS,EAAC,MAAM;UAAC,SAAS,EAAC,mBAAmB;UAAA,wBACtD,QAAC,IAAI,CAAC,KAAK;YAAA,UAAC;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAa,eACjC,QAAC,IAAI,CAAC,OAAO;YAAC,IAAI,EAAC,UAAU;YAAC,WAAW,EAAC;UAAU;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAC9C,eACb,QAAC,IAAI,CAAC,KAAK;UAAC,SAAS,EAAC,MAAM;UAAC,SAAS,EAAC,mBAAmB;UAAA,uBACtD,QAAC,IAAI,CAAC,KAAK;YAAC,IAAI,EAAC,UAAU;YAAC,KAAK,EAAC;UAAc;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAC1C,eACb,QAAC,MAAM;UAAC,OAAO,EAAC,SAAS;UAAC,IAAI,EAAC,QAAQ;UAAA,UAAC;QAExC;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IACN;MAAA;MAAA;MAAA;IAAA;EAEL;AAGd;AAAC,GA1EQpB,QAAQ;AAAA,KAARA,QAAQ;AA4EjB,eAAeA,QAAQ;;AAGvB;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}